(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{216:function(t,v,_){"use strict";_.r(v);var n=_(0),e=Object(n.a)({},function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"编程匠艺总结"}},[t._v("编程匠艺总结")]),t._v(" "),_("h2",{attrs:{id:"面向对象（道）"}},[t._v("面向对象（道）")]),t._v(" "),_("blockquote",[_("p",[t._v("有道无术，术尚可求也；有术无道，止于术。")])]),t._v(" "),_("h2",{attrs:{id:"驱动模式（术）"}},[t._v("驱动模式（术）")]),t._v(" "),_("h3",{attrs:{id:"【udd】-用例驱动设计"}},[t._v("【UDD】 用例驱动设计")]),t._v(" "),_("blockquote",[_("p",[t._v("角色、职责、协作")])]),t._v(" "),_("pre",[_("code",[t._v("- 用例图\n- 时序图\n- 类图\n")])]),t._v(" "),_("h4",{attrs:{id:"六要素："}},[t._v("六要素：")]),t._v(" "),_("ul",[_("li",[t._v("谁？")]),t._v(" "),_("li",[t._v("多少？")]),t._v(" "),_("li",[t._v("什么时间？")]),t._v(" "),_("li",[t._v("做什么？")]),t._v(" "),_("li",[t._v("什么位置？")]),t._v(" "),_("li",[t._v("为什么？")])]),t._v(" "),_("h3",{attrs:{id:"【tdd】-测试驱动开发"}},[t._v("【TDD】 测试驱动开发")]),t._v(" "),_("pre",[_("code",[t._v("- 单元测试不是测试，代码未动，测试先行\n- 从场景开始\n- 增量式开发，每次只走一步\n- 重构以保持代码的健康\n")])]),t._v(" "),_("h2",{attrs:{id:"实践"}},[t._v("实践")]),t._v(" "),_("h3",{attrs:{id:"重构、结对编程"}},[t._v("重构、结对编程")]),t._v(" "),_("pre",[_("code",[t._v("- 角色、职责、协作\n\t- 单一职责，自治，一个对象不能拥有两个或两个以上方向变化的职责；若存在，就应对职责进行分离\n\t- 在收到调用者的请求时，能够完成自己擅长的职责，同时知道将自己无法完成的职责委托给正确的对象\n- 封装变化   \n\t当职责存在部分差异时，需要将部分差异分离到子类中，由子类负责具体实现；如果这部分的差异足以形成单独的职责吗，也可以分离，并抽象为单独的接口；\n")])])])},[],!1,null,null,null);v.default=e.exports}}]);